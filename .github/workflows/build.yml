name: build
on: [push]
jobs:

  lint:
    runs-on: ubuntu-latest
    name: Go lint
    
    steps:
    
    - uses: actions/checkout@v2
    
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15'
    
    - run: |
        go get -u -v golang.org/x/lint/golint
        golint ./...

  build-linux:
    #qemu does not work correctly in ubuntu-18.04
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm, arm64, s390x]
        go: [ '1.15', '1.14', '1.13' ]
      fail-fast: false  
    
    name: Go ${{ matrix.go }} ${{ matrix.goos }} ${{ matrix.goarch }} build
    
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: 6

    steps:
    
    - name: Install qemu-user
      run: |
        sudo apt-get update
        sudo apt-get -y install qemu-user

    - uses: actions/checkout@v2
    
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        
    - name: Build
      run: |
        go build -v ./...

    - name: Vet
      run: |
        go vet ./...
        
    - name: Test
      run: |
        go test -v --tags unit ./...    
        
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        go: [ '1.15', '1.14', '1.13' ]
      fail-fast: false  
    
    name: Go ${{ matrix.go }} macOS
    
    steps:
    
    - uses: actions/checkout@v2
    
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        
    - name: Build
      run: |
        go build -v ./...

    - name: Vet
      run: |
        go vet ./...
        
    - name: Test
      run: |
        go test -v --tags unit ./...    

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        go: [ '1.15', '1.14', '1.13' ]
      fail-fast: false  
    
    name: Go ${{ matrix.go }} Windows
    
    steps:
    
    - uses: actions/checkout@v2
    
    - name: Setup go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        
    - name: Build
      run: |
        go build -v ./...

    - name: Vet
      run: |
        go vet ./...
        
    - name: Test
      run: |
        go test -v --tags unit ./...    
